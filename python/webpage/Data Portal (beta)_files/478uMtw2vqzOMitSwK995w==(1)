/*
CustomJS LIVE, Betfair Self Service
Version 1.8.5
*/
if (!Array.prototype.includes) {
	Object.defineProperty(Array.prototype, "includes", {
		enumerable: false,
		value: function (obj) {
			var newArr = this.filter(function (el) {
				return el == obj;
			});
			return newArr.length > 0;
		}
	});
}

if (!(IMI.CustomJS && IMI.CustomJS.customJSisLoaded)) {

	(function () {
		IMI.CustomJS = {
			customJSisLoaded: true,
			slideOutReverseOriginal: false,
			oldURL: window.location.href,
			incrementVisitCountCalled: false,
			visitCount: 0,
			
			locks: {},
			afterInterceptsLoaded: function () {
				console.log('running CustomJS');
				var imm = IMI.CustomJS;

				if (window.location.href.indexOf("betfair.com.au/hub") > -1) {
					console.log('running incrementVisitCount');
					IMI.CustomJS.visitCount = IMI.CustomJS.mods.incrementVisitCount();
				}
				
				if (!imm.slideOutReverseOriginal) {
					console.log("Saving oiginal IMI.AnimationUtil.slideOutReverse");
					imm.slideOutReverseOriginal = IMI.AnimationUtil.slideOutReverse;
					IMI.AnimationUtil.slideOutReverse = imm.mods.slideOutReverse;	
				}
			},
			'mods': {


				/**
				 * Detect mouse out intent. 
				 * 
				 * Add as last trigger:
				 * 
				 *  Trigger type: JS Expression
				 * 
				 *  Trigger Operator: Equals
				 * 
				 *  Js Expression: IMI.CustomJS.mods.detectMouseOutIntent(<interceptId>, <delay>);
				 * 
				 *  Return value to compare: true
				 *
				 * @param {integer} interceptId
				 *   Id of intercept to trigger
				 * @param {integer} delay
				 *   delay in seconds before listening for mouse out.
				 */
				detectMouseOutIntent: function (interceptId, delay, callback) {

					if (IMI.CustomJS.locks['detectMouseOutIntent-' + interceptId]) {
						return false;
					} else {
						IMI.CustomJS.locks['detectMouseOutIntent-' + interceptId]=true;
						var armAfterMilliSeconds = delay * 1000 || 10000;
						var intercept = IMI.CustomJS.mods.getIntercept(interceptId);
						if (!intercept) {
							return false;
						}

						function mouseout(callback, e) {
							//console.log('mouseoutListener fired');
							e = e ? e : window.event;
							var from = e.relatedTarget || e.toElement;

							if (!from || from.nodeName === 'HTML') {
								var scrollPos = window.pageYOffset || window.scrollY || window.scrollTop || document.getElementsByTagName('html')[0].scrollTop;

								if (e.pageY - scrollPos <= 1) {
									// the cursor has left the building
									callback();
								}
							}
						};

						// function triggerIntercept() {
						// 	console.log("Exit intent triggered");
						// 		IMI.InterceptUtil.appendAdditionalDataToURL(intercept);
						// 		IMI.InterceptUtil.triggerIntercept.call(IMI.InterceptUtil.triggerIntercept, intercept, new Map);
						// 		document.removeEventListener("mouseout", doMouseOut);

						// }

						var doMouseOut = function (event) {
							mouseout(callback, event);
						};

						setTimeout(function () {
							document.addEventListener("mouseout", doMouseOut);
						}, armAfterMilliSeconds);

						return false;
					}
				},

				incrementVisitCount: function () {
					var e = this.getCookieNames().domainCookieName
						, n = null;
					if (!IMI.CustomJS.incrementVisitCountCalled) {
						n = window.sessionStorage.getItem("IMI_DomainVisitCount_" + e) || "0";
						n = parseInt(n, 10) + 1;
						window.sessionStorage.setItem("IMI_DomainVisitCount_" + e, "" + n);
						IMI.CustomJS.incrementVisitCountCalled = true;
					} else {
						n = window.sessionStorage.getItem("IMI_DomainVisitCount_" + e) || "0";
					}
					return n;
				},

				setSessionFatigue: function (interceptId) {
					window.sessionStorage.setItem("IMI_InterceptFatigue_" + interceptId, "true");
				},
				
				setLocalFatigue: function (interceptId) {
					window.localStorage.setItem( "IMI_InterceptFatigue_" + interceptId, new Date().getTime());
				},

				checkLocalFatigue: function (interceptId) {
					if (interceptId == 192 || interceptId == 193) {
						var n = window.localStorage.getItem("IMI_InterceptFatigue_" + interceptId);
						
						if (n ||
						  (
							(parseInt(n) + (
							  (90 * 60 * 60 * 24) *
							  1000
							)) > (new Date().getTime())
						  )
						) {
						return false;
						}
						return true;
					}
				},

				checkSessionFatigue: function (interceptId) {
					// return true if not fatigued.
					var n = window.sessionStorage.getItem("IMI_InterceptFatigue_" + interceptId) || "false";
					return n === "false";
				},

				getCookieNames: function () {
					if (!window.location.hostname || !window.location.pathname)
						return "";
					var e = window.location.hostname + "_" + window.location.pathname.split(/[.]/)[0].replace("/", "");
					return {
						domainCookieName: window.location.hostname,
						pathCookieName: e
					}
				},



				getIntercept: function (id) {
					for (var i = 0; i < IMI.Intercepts.length; i++) {
						if (IMI.Intercepts[i].id == id) {
							return IMI.Intercepts[i];
						}
					}
				},

				listenForURLChange: function (interceptId) {

					function checkURLchange() {
						if (window.location.href != IMI.CustomJS.oldURL) {
							IMI.CustomJS.oldURL = window.location.href;
							IMI.InterceptUtil.evaluateIntercepts(IMI.Intercepts, true);
							//IMI.InterceptUtil.appendAdditionalDataToURL(IMI.CustomJS.mods.getIntercept(interceptId));                
						}
					}
					setInterval(checkURLchange, 1000);
					return true;
				},

				triggerBannerInlinePopupAfterDelay: function (interceptId, insertSelector, delay, popupHeight) {

				  function trigger() {
					IMI.CustomJS.mods.bannerInlinePopup(interceptId, insertSelector, popupHeight)
				  }
				  setInterval(trigger, (delay * 1000));
				  console.log( 'delay: '+delay * 1000 )
				  return false;
				},

				slideOutReverse: function (obj, displaceLeftBy) {
					if (obj.id == "_im_feedbackTab_tab__283" || obj.id == "_im_feedbackTab_tab__284") {
						console.log("running slideOutReverseEDS");
						IMI.CustomJS.mods.slideOutReverseEDS(obj, displaceLeftBy);
					} else {
						console.log("running slideOutReverseOriginal");
						IMI.CustomJS.slideOutReverseOriginal(obj, displaceLeftBy);
					}
				},
				slideOutReverseEDS: function (obj, displaceLeftBy) {
					//increase width of feedback tab, default witdh is 319
					var oldWidth = 319, newWidth = 545, elemSection;
					if (screen.width < 555) {
						newWidth = oldWidth;
					}
					var neutralPos = '0px';
					var extPos = newWidth + displaceLeftBy + 'px';

					if (obj) {
						var elem = obj;
						if (obj.target) {
							elem = obj.target;
						}

						if (elem && elem.parentNode) {
							elemSection = elem.parentNode.querySelector("section");
						}
						//opening
						if (IMI.AnimationUtil.slideOutStatusReverse === 0) {
							elem.style.transition = '0.5s';
							elem.style.right = extPos;
							IMI.AnimationUtil.slideOutStatusReverse = 1;
							if (elemSection) {
								elemSection.style.width = newWidth + "px";
							}


						}
						//closing
						else {
							elem.style.transition = '0.5s';
							elem.style.right = neutralPos;
							IMI.AnimationUtil.slideOutStatusReverse = 0;
							IMI.JSUtil.setInterceptClosedCookie();
							if (elemSection) {
								elemSection.style.width = oldWidth + "px";
							}
						}
					}
				},
				isTestMode: function () {
					var IM_loadTestCustomJS = IMI.CustomJS.mods.interceptLocalStorage.get('IM_loadTestCustomJS');
					var IM_loadInterceptsInTest = IMI.CustomJS.mods.interceptLocalStorage.get('IM_loadInterceptsInTest');
					return ("true" === IM_loadTestCustomJS || "true" === IM_loadInterceptsInTest);
				},

				getIntercept: function (id) {
					for (var i = 0; i < IMI.Intercepts.length; i++) {
						if (IMI.Intercepts[i].id == id) {
							return IMI.Intercepts[i];
						}
					}
				},

				htmlToElem: function (html) {
					let temp = document.createElement('template');
					html = html.trim(); // Never return a space text node as a result
					temp.innerHTML = html;
					return temp.content.firstChild;
				},

				bannerInlineSelected: undefined,

				/**
 * Trigger Intercept via JavaScript.
 *
 * @param {integer} interceptId
 *   Id of intercept to trigger
 */
				triggerIntercept: function (interceptId) {
					var intercept = IMI.CustomJS.mods.getIntercept(interceptId);
					if (intercept) {
						IMI.InterceptUtil.appendAdditionalDataToURL(intercept);
						IMI.InterceptUtil.triggerIntercept.call(IMI.InterceptUtil.triggerIntercept, intercept, new Map);
					}
				},

				bannerInlineSelection: function (interceptId, visualId, selection) {
					IMI.CustomJS.mods.bannerInlineSelected = selection;
					var iframe = document.querySelector('#_im_iframe_overlay__' + visualId + ' #intercept_iframe');
					if (iframe) {
						iframe.classList.remove("im_closed_helpful");
					}
					document.getElementById("im_questionWrapper").style.display = "none";
					IMI.CustomJS.mods.setLocalFatigue(interceptId);
					IMI.CustomJS.mods.triggerIntercept(interceptId);
					return true;
				},

				closeParentSetFatigue: function (interceptId) {
					IMI.CustomJS.mods.setLocalFatigue(interceptId);
					document.getElementById('im_questionWrapper').style.display = 'none';
				},

				bannerInlinePopup: function (interceptId, insertSelector, popupHeight) {
					if (IMI.CustomJS.locks['bannerInlinePopup-' + interceptId]) {
						return false;
					} else {
						IMI.CustomJS.locks['bannerInlinePopup-' + interceptId] = true;

						if (!IMI.CustomJS.mods.checkLocalFatigue(interceptId)) {
							return false;
						}
						
						insertSelector = insertSelector || 'div.c-footer';
						popupHeight = popupHeight || '720';

						var intercept = IMI.CustomJS.mods.getIntercept(interceptId);
						if (intercept && intercept.visual.id) {
							var visualId = intercept.visual.id;
							console.log(interceptId)
							var questionText = '';

							if (interceptId == 192) {
								questionText = 'Did you find what you were looking for today?';
							}
							if (interceptId == 193) {
								questionText = 'Did you find this article useful?';
							}

							var main = document.querySelector(insertSelector)
							var head = document.head || document.getElementsByTagName('head')[0];

							if (main && head) {
								var interceptElement = document.querySelector("#_im_iframe_overlay__" + visualId);
								if (interceptElement) {
									main.appendChild(interceptElement);

									var style = document.createElement('style');
									var css = 'section#_im_iframe_overlay__' + visualId + ' > section#intercept_section { max-width: 1000px; left: calc(50% - 500px); top: calc(50% - ' + Math.floor(popupHeight / 2) + 'px); height: ' + popupHeight + 'px;} }';
									head.appendChild(style);
									style.appendChild(document.createTextNode(css));
								}


								let inviteStyle = IMI.CustomJS.mods.htmlToElem(
									'<style>' +
									'#im_questionWrapper {' +
									'  padding-top: 2rem;' +
									'  text-align: center;' +
									'  width: 100%;' +
									'  height: 9rem;' +
									'  overflow: hidden;' +
									'  border-bottom: 1px solid #6e6e6e !important;' +
									'}' +
									
									'#im_questionWrapper div#imClose {'+
									'	position: absolute;'+
									'	width: 30px;'+
									'	height: 30px;'+
									'	line-height: normal;'+
									'	top: 10px;'+
									'	right: 10px;'+
									'	background: #fff;'+
									'	border: 0px solid #000000;'+
									'	cursor: pointer;'+
									'	z-index: 10001;'+
									'	border-radius: 50%;'+
									'	color: #000;'+
									'	box-shadow: 0 2px 10px rgb(16 18 18 / 85%);'+
									'	padding: 0;'+
									'	font-size: 14px;'+
									'	font-weight:bold;'+
									'}'+
									
									'#im_questionWrapper div#imClose button {'+
									'	width: 30px;'+
									'	height: 30px;'+
									'	display:block;'+
									'}'+
									
									'#im_questionWrapper .questionText {' +
									'  font-family: "VIC", sans-serif;' +
									'  color: #585858;' +
									'  font-style: normal;' +
									'  text-decoration: none;' +
									'  line-height: normal;' +
									'  width: 100%;' +
									'  float: left;' +
									'  font-weight: 700 !important;' +
									'  font-size: 1.8rem;' +
									'  text-align: left;' +
									'  padding-left: 15px;' +
									'  max-width: 240px;' +
									'  padding-top: 1rem;' +
									'  margin-bottom: 0.7rem !important;' +
									'  margin-right: 2rem !important;' +
									'}' +

									'#im_questionWrapper .answerGroup {' +
									'  float: left;' +
									'}' +

									'#im_questionWrapper .radioWrapper {' +
									'  /*width:  45%;*/' +
									'  float: left;' +
									'}' +

									'div#im_questionWrapper { ' +
									'    position: fixed; ' +
									'    bottom: 0px; ' +
									'    right: 0px; ' +
									'    width: 553px; ' +
									'    height: 327px; ' +
									'    background: #fff; ' +
									'    padding: 0px; ' +
									'    z-index: 999999; ' +
									'}' +
									'#customHeader { ' +
									'    border-bottom: 10px solid #ffb80c; ' +
									'    background-color: #1E1E1E; ' +
									'}' +
									'.logoContainer img { ' +
									'    max-width: 225px; ' +
									'    width: 100%; ' +
									'    display: block; ' +
									'    padding: 20px; ' +
									'}' +
									'#im_questionWrapper .questionText{ ' +
									'    color: #000000; ' +
									'    font-size: 20px; ' +
									'    font-weight: normal !important; ' +
									'    line-height: 1.5em; ' +
									'    font-family: "DIN OT", Arial, sans-serif; ' +
									'    max-width: 100%; ' +
									'    margin: 0px !important; ' +
									'    padding: 20px 0px; ' +
									'}' +
									'div#q1 { ' +
									'    width: 90%; ' +
									'    margin: 0 auto; ' +
									'}' +
									'.btn.btn-secondary { ' +
									'    background-color: #1E1E1E; ' +
									'    line-height: 40px; ' +
									'    border-left: none; ' +
									'    color: #fff; ' +
									'    border-right: 2px solid #fff; ' +
									'    min-width: 80px; ' +
									'}' +
									'div#footer { ' +
									'    width: 100%; ' +
									'    margin-top: 50px; ' +
									'}' +
									'#q1:after, ' +
									'#q1:before{ ' +
									'    display:table; ' +
									'    content:" "; ' +
									'    clear:both; ' +
									'}' +
									'#footer { ' +
									'  background-color: #1E1E1E; ' +
									'  color: #ffffff; ' +
									'  display: table; ' +
									'  width: 100%; ' +
									'}' +
									'#footer a { ' +
									'  color: #ffffff; ' +
									'  text-decoration: none; ' +
									'}' +
									'#footer a:hover { ' +
									'  color: #ffffff; ' +
									'  text-decoration: underline; ' +
									'}' +
									'#footer #links { ' +
									'  display: table; ' +
									'  margin: 0 auto; ' +
									'  max-width: 1000px; ' +
									'  width: 100%; ' +
									'  padding: 20px 10px 20px 10px; ' +
									'  box-sizing: border-box; ' +
									'}' +
									'#footer #companyLogo { ' +
									'  border-radius: 0px; ' +
									'  -moz-border-radius: 0px; ' +
									'  -webkit-border-radius: 0px; ' +
									'  padding: 0px 0px 0px 0px; ' +
									'}' +
									' /* White Powered by InMoment logo */ ' +
									'#footer #companyLogo img { ' +
									'   width: 130px; ' +
									'   height: 25px; ' +
									'}' +
									'#footer .leftLinks { ' +
									'    padding-top: 4px; ' +
									'    font-size: 12px; ' +
									'    width: 69%; ' +
									'}' +
									'.leftLinks { ' +
									'    float: left; ' +
									'}' +
									'#footer .rightLinks { ' +
									'    float: right; ' +
									'    width: 30%; ' +
									'}' +
									'.leftLinks span,.leftLinks div { ' +
									'    float: left; ' +
									'}' +



									' @media only screen and (max-width: 539px) {' +
									'     #im_questionWrapper {' +
									'         height: 14rem !important;' +
									'         padding-top: 1rem;' +
									'     }' +
									'     #im_questionWrapper .questionText {' +
									'         margin-bottom: 1em !important;' +
									'     }' +
									' }' +

									// ' @media only screen and (max-width: 740px) {' +
									// '     #im_questionWrapper .answerGroup {' +
									// // '         width: 250px;' +
									// '         float: left;' +
									// '     }' +
									// ' }' +

									// '@media only screen and (max-width:640px) {' +

									// '  #im_questionWrapper {' +
									// '    height: 12rem !important;' +
									// '    padding-top: 0rem;' +
									// '  }' +

									// '  #im_questionWrapper .questionText {' +
									// '    margin-bottom: 1em !important;' +
									// '  }' +

									// ' ' +
									// '   #im_questionWrapper .answerGroup {' +
									// '    width: 350px;' +
									// '    float: left;' +
									// '  }' +
									// '  ' +
									// '}' +
									'</style>'

								);

								let inviteDiv = IMI.CustomJS.mods.htmlToElem(

									'<div id="im_questionWrapper"> ' +
									'	<div id="imClose"><button onclick="IMI.CustomJS.mods.closeParentSetFatigue(' + intercept.id + ')">X</button></div>'+
									'    <div id="customHeader" role="contentinfo" ng-bind-html="customHtml.header|unsafe" class="ng-binding">' +
									'        <div role="img" class="logoContainer">' +
									'            <div class="promptArea"> <img alt="Betfair" src="https://feedback.inmoment.com.au/websurvey/servlet/BlobServlet?s2=6467e63e-a4e4-4ce9-9f41-70b0ee68b277-12&amp;v=0&amp;type=0&amp;t=betfairLogo"> </div>' +
									'        </div>' +
									'    </div>' +
									'    <div id="q1">' +
									'        <div class="questionText">' + questionText + '</div>' +
									'        <div class="answerGroup">' +
									'            <div class="radioWrapper" style="/* width: 50%; */">' +
									'                <button class="btn btn-secondary" type="button" id="q1-Yes" aria-label="Yes. Click to tell us why." onclick="IMI.CustomJS.mods.bannerInlineSelection(' + intercept.id + ', ' + intercept.visual.id + ', 1);">Yes</button>' +
									'            </div>' +
									'            <div class="radioWrapper">' +
									'                <button class="btn btn-secondary" type="button"  id="q1-No" aria-label="No. Click to tell us why." onclick="IMI.CustomJS.mods.bannerInlineSelection(' + intercept.id + ', ' + intercept.visual.id + ', 2);">No</button>' +
									'            </div>' +
									'        </div>' +
									'    </div>' +
									'    <div id="footer" role="contentinfo">' +
									'        <div id="links" role="region">' +
									'            <div class="leftLinks"> <span id="privacyPolicy"><a target="_blank" tabindex="999" shape="rect" ng-href="http://www.inmoment.com/privacy-policy/" href="http://www.inmoment.com/privacy-policy/"><span ng-bind="pageMessages.privacyPolicyText" class="ng-binding">Privacy Policy &amp; Data Rights</span></a></span><span class="linkSeparator">&nbsp;|</span> ' +
									'                <!-- ngIf: pageMessages.contestRulesLink --> ' +
									'                <!-- ngIf: pageMessages.previousWinnersLink -->' +
									'                <div id="copyright" class="ng-binding">© 2022 InMoment Inc. </div>' +
									'            </div>' +
									'            <div class="rightLinks">' +
									'                <div id="companyLogo" tabindex="999"> <img src="https://feedback.inmoment.com.au/websurvey/image/powered-by-inmoment-gray.svg" alt="Powered by InMoment (Opens in a new window)"> </div>' +
									'            </div>' +
									'        </div>' +
									'    </div>' +
									'</div>'
								);
								main.insertBefore(inviteStyle, main.firstChild);
								main.insertBefore(inviteDiv, main.firstChild);
								//IMI.CustomJS.mods.doBackOnPostMessage(intercept);

								//IMI.CustomJS.mods.closeInterceptOnPostMessage(intercept, closeDelay, "im_questionWrapper");
							}
						}
						return false;
					}

				},


			}
		}
	}
	)();
}